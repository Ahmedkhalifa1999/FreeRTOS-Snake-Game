Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    main.o(.text.main) refers to main.o(.bss.MainMenuTaskHandle) for MainMenuTaskHandle
    main.o(.text.main) refers to main.o(.text.MainMenuTask) for MainMenuTask
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.bss.RenderTaskHandle) for RenderTaskHandle
    main.o(.text.main) refers to main.o(.text.RenderTask) for RenderTask
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.RenderQueue) for RenderQueue
    main.o(.text.main) refers to main.o(.text.initializeHardware) for initializeHardware
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.MainMenuTask) refers to main.o(.rodata..L__const.MainMenuTask.gameStartRenderRequest) for .L__const.MainMenuTask.gameStartRenderRequest
    main.o(.text.MainMenuTask) refers to main.o(.bss.inGame) for inGame
    main.o(.text.MainMenuTask) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    main.o(.text.MainMenuTask) refers to main.o(.bss.GameStateLock) for GameStateLock
    main.o(.text.MainMenuTask) refers to main.o(.bss.GenerateRandomNumberLock) for GenerateRandomNumberLock
    main.o(.text.MainMenuTask) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.MainMenuTask) refers to main.o(.bss.NormalPowerUpSemaphore) for NormalPowerUpSemaphore
    main.o(.text.MainMenuTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.MainMenuTask) refers to main.o(.bss.RenderQueue) for RenderQueue
    main.o(.text.MainMenuTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.MainMenuTask) refers to uart.o(i.UARTCharGet) for UARTCharGet
    main.o(.text.MainMenuTask) refers to main.o(.text.resetGameState) for resetGameState
    main.o(.text.MainMenuTask) refers to main.o(.bss.wonLast) for wonLast
    main.o(.text.MainMenuTask) refers to main.o(.data.SnakeSpeed) for SnakeSpeed
    main.o(.text.MainMenuTask) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    main.o(.text.MainMenuTask) refers to main.o(.bss.SnakePositionUpdateTaskHandle) for SnakePositionUpdateTaskHandle
    main.o(.text.MainMenuTask) refers to main.o(.text.SnakePositionUpdateTask) for SnakePositionUpdateTask
    main.o(.text.MainMenuTask) refers to main.o(.rodata.str1.1) for .L.str.2
    main.o(.text.MainMenuTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.MainMenuTask) refers to main.o(.bss.NormalPowerUpSpawnTaskHandle) for NormalPowerUpSpawnTaskHandle
    main.o(.text.MainMenuTask) refers to main.o(.text.NormalPowerUpSpawnTask) for NormalPowerUpSpawnTask
    main.o(.text.MainMenuTask) refers to main.o(.bss.SpecialPowerUpSpawnTaskHandle) for SpecialPowerUpSpawnTaskHandle
    main.o(.text.MainMenuTask) refers to main.o(.text.SpecialPowerUpSpawnTask) for SpecialPowerUpSpawnTask
    main.o(.text.MainMenuTask) refers to main.o(.bss.EnemySpawnTaskHandle) for EnemySpawnTaskHandle
    main.o(.text.MainMenuTask) refers to main.o(.text.EnemySpawnTask) for EnemySpawnTask
    main.o(.text.MainMenuTask) refers to main.o(.bss.TimeUpdateTaskHandle) for TimeUpdateTaskHandle
    main.o(.text.MainMenuTask) refers to main.o(.text.TimeUpdateTask) for TimeUpdateTask
    main.o(.ARM.exidx.text.MainMenuTask) refers to main.o(.text.MainMenuTask) for [Anonymous Symbol]
    main.o(.text.RenderTask) refers to main.o(.rodata.str1.1) for .L__const.RenderTask.welcomeString
    main.o(.text.RenderTask) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    main.o(.text.RenderTask) refers to main.o(.bss.RenderQueue) for RenderQueue
    main.o(.text.RenderTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.RenderTask) refers to main.o(.text.clearScreen) for clearScreen
    main.o(.text.RenderTask) refers to uart.o(i.UARTCharPut) for UARTCharPut
    main.o(.text.RenderTask) refers to main.o(.bss.GameStateLock) for GameStateLock
    main.o(.text.RenderTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.RenderTask) refers to main.o(.bss.GameState) for GameState
    main.o(.text.RenderTask) refers to main.o(.text.moveCursorToPosition) for moveCursorToPosition
    main.o(.text.RenderTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.RenderTask) refers to main.o(.text.moveCursorToBottom) for moveCursorToBottom
    main.o(.text.RenderTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.RenderTask) refers to main.o(.bss.score) for score
    main.o(.text.RenderTask) refers to main.o(.bss.time) for time
    main.o(.ARM.exidx.text.RenderTask) refers to main.o(.text.RenderTask) for [Anonymous Symbol]
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.rodata..L__const.SnakePositionUpdateTask.snakeUpdateRenderRequest) for .L__const.SnakePositionUpdateTask.snakeUpdateRenderRequest
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.rodata..L__const.SnakePositionUpdateTask.powerUpRemoveRenderRequest) for .L__const.SnakePositionUpdateTask.powerUpRemoveRenderRequest
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.rodata..L__const.SnakePositionUpdateTask.lossMessageRenderRequest) for .L__const.SnakePositionUpdateTask.lossMessageRenderRequest
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.rodata..L__const.SnakePositionUpdateTask.winMessageRenderRequest) for .L__const.SnakePositionUpdateTask.winMessageRenderRequest
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.rodata..L__const.SnakePositionUpdateTask.updateScoreRenderRequest) for .L__const.SnakePositionUpdateTask.updateScoreRenderRequest
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.bss.GameStateLock) for GameStateLock
    main.o(.text.SnakePositionUpdateTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.SnakePositionUpdateTask) refers to uart.o(i.UARTCharsAvail) for UARTCharsAvail
    main.o(.text.SnakePositionUpdateTask) refers to uart.o(i.UARTCharGet) for UARTCharGet
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.data.LastDirection) for LastDirection
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.bss.GameState) for GameState
    main.o(.text.SnakePositionUpdateTask) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.bss.GenerateRandomNumberLock) for GenerateRandomNumberLock
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.bss.NormalPowerUpSemaphore) for NormalPowerUpSemaphore
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.bss.NormalPowerUpSpawnTaskHandle) for NormalPowerUpSpawnTaskHandle
    main.o(.text.SnakePositionUpdateTask) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.bss.SpecialPowerUpSpawnTaskHandle) for SpecialPowerUpSpawnTaskHandle
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.bss.EnemySpawnTaskHandle) for EnemySpawnTaskHandle
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.bss.TimeUpdateTaskHandle) for TimeUpdateTaskHandle
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.bss.inGame) for inGame
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.bss.wonLast) for wonLast
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.bss.RenderQueue) for RenderQueue
    main.o(.text.SnakePositionUpdateTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.bss.score) for score
    main.o(.text.SnakePositionUpdateTask) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.SnakePositionUpdateTask) refers to main.o(.data.SnakeSpeed) for SnakeSpeed
    main.o(.text.SnakePositionUpdateTask) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    main.o(.ARM.exidx.text.SnakePositionUpdateTask) refers to main.o(.text.SnakePositionUpdateTask) for [Anonymous Symbol]
    main.o(.text.NormalPowerUpSpawnTask) refers to main.o(.rodata..L__const.NormalPowerUpSpawnTask.powerUpRenderRequest) for .L__const.NormalPowerUpSpawnTask.powerUpRenderRequest
    main.o(.text.NormalPowerUpSpawnTask) refers to main.o(.bss.NormalPowerUpSemaphore) for NormalPowerUpSemaphore
    main.o(.text.NormalPowerUpSpawnTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.NormalPowerUpSpawnTask) refers to main.o(.bss.GameStateLock) for GameStateLock
    main.o(.text.NormalPowerUpSpawnTask) refers to main.o(.text.generateRandomPosition) for generateRandomPosition
    main.o(.text.NormalPowerUpSpawnTask) refers to main.o(.bss.GameState) for GameState
    main.o(.text.NormalPowerUpSpawnTask) refers to main.o(.bss.RenderQueue) for RenderQueue
    main.o(.text.NormalPowerUpSpawnTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.NormalPowerUpSpawnTask) refers to main.o(.text.NormalPowerUpSpawnTask) for [Anonymous Symbol]
    main.o(.text.SpecialPowerUpSpawnTask) refers to main.o(.rodata..L__const.SpecialPowerUpSpawnTask.powerUpRenderRequest) for .L__const.SpecialPowerUpSpawnTask.powerUpRenderRequest
    main.o(.text.SpecialPowerUpSpawnTask) refers to main.o(.rodata..L__const.SpecialPowerUpSpawnTask.powerUpRemoveRenderRequest) for .L__const.SpecialPowerUpSpawnTask.powerUpRemoveRenderRequest
    main.o(.text.SpecialPowerUpSpawnTask) refers to main.o(.bss.GameStateLock) for GameStateLock
    main.o(.text.SpecialPowerUpSpawnTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.SpecialPowerUpSpawnTask) refers to main.o(.bss.GameState) for GameState
    main.o(.text.SpecialPowerUpSpawnTask) refers to main.o(.bss.RenderQueue) for RenderQueue
    main.o(.text.SpecialPowerUpSpawnTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.SpecialPowerUpSpawnTask) refers to main.o(.text.generateRandomNumber) for generateRandomNumber
    main.o(.text.SpecialPowerUpSpawnTask) refers to main.o(.text.generateRandomPosition) for generateRandomPosition
    main.o(.text.SpecialPowerUpSpawnTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.SpecialPowerUpSpawnTask) refers to main.o(.text.SpecialPowerUpSpawnTask) for [Anonymous Symbol]
    main.o(.text.EnemySpawnTask) refers to main.o(.rodata..L__const.EnemySpawnTask.enemyRenderRequest) for .L__const.EnemySpawnTask.enemyRenderRequest
    main.o(.text.EnemySpawnTask) refers to main.o(.rodata..L__const.EnemySpawnTask.enemyRemoveRenderRequest) for .L__const.EnemySpawnTask.enemyRemoveRenderRequest
    main.o(.text.EnemySpawnTask) refers to main.o(.bss.GameStateLock) for GameStateLock
    main.o(.text.EnemySpawnTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.EnemySpawnTask) refers to main.o(.bss.GameState) for GameState
    main.o(.text.EnemySpawnTask) refers to main.o(.bss.RenderQueue) for RenderQueue
    main.o(.text.EnemySpawnTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.EnemySpawnTask) refers to main.o(.text.generateRandomPosition) for generateRandomPosition
    main.o(.text.EnemySpawnTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.EnemySpawnTask) refers to main.o(.text.EnemySpawnTask) for [Anonymous Symbol]
    main.o(.text.TimeUpdateTask) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.TimeUpdateTask) refers to main.o(.rodata..L__const.TimeUpdateTask.timeUpdateRenderRequest) for .L__const.TimeUpdateTask.timeUpdateRenderRequest
    main.o(.text.TimeUpdateTask) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    main.o(.text.TimeUpdateTask) refers to main.o(.bss.time) for time
    main.o(.text.TimeUpdateTask) refers to main.o(.bss.RenderQueue) for RenderQueue
    main.o(.text.TimeUpdateTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.TimeUpdateTask) refers to main.o(.text.TimeUpdateTask) for [Anonymous Symbol]
    main.o(.text.moveCursorToPosition) refers to uart.o(i.UARTCharPut) for UARTCharPut
    main.o(.ARM.exidx.text.moveCursorToPosition) refers to main.o(.text.moveCursorToPosition) for [Anonymous Symbol]
    main.o(.text.initializeHardware) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    main.o(.text.initializeHardware) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    main.o(.text.initializeHardware) refers to gpio.o(i.GPIOPinTypeUART) for GPIOPinTypeUART
    main.o(.text.initializeHardware) refers to gpio.o(i.GPIOPinConfigure) for GPIOPinConfigure
    main.o(.text.initializeHardware) refers to sysctl.o(i.SysCtlClockGet) for SysCtlClockGet
    main.o(.text.initializeHardware) refers to uart.o(i.UARTConfigSetExpClk) for UARTConfigSetExpClk
    main.o(.text.initializeHardware) refers to uart.o(i.UARTFIFODisable) for UARTFIFODisable
    main.o(.text.initializeHardware) refers to uart.o(i.UARTCharPut) for UARTCharPut
    main.o(.ARM.exidx.text.initializeHardware) refers to main.o(.text.initializeHardware) for [Anonymous Symbol]
    main.o(.text.resetGameState) refers to main.o(.bss.GameState) for GameState
    main.o(.text.resetGameState) refers to main.o(.data.LastDirection) for LastDirection
    main.o(.text.resetGameState) refers to main.o(.bss.score) for score
    main.o(.text.resetGameState) refers to main.o(.bss.time) for time
    main.o(.ARM.exidx.text.resetGameState) refers to main.o(.text.resetGameState) for [Anonymous Symbol]
    main.o(.text.clearScreen) refers to uart.o(i.UARTCharPut) for UARTCharPut
    main.o(.ARM.exidx.text.clearScreen) refers to main.o(.text.clearScreen) for [Anonymous Symbol]
    main.o(.text.moveCursorToBottom) refers to main.o(.text.moveCursorToPosition) for moveCursorToPosition
    main.o(.ARM.exidx.text.moveCursorToBottom) refers to main.o(.text.moveCursorToBottom) for [Anonymous Symbol]
    main.o(.text.generateRandomNumber) refers to main.o(.bss.GenerateRandomNumberLock) for GenerateRandomNumberLock
    main.o(.text.generateRandomNumber) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.generateRandomNumber) refers to main.o(.bss.generateRandomNumber.x) for generateRandomNumber.x
    main.o(.text.generateRandomNumber) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.generateRandomNumber) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.generateRandomNumber) refers to main.o(.text.generateRandomNumber) for [Anonymous Symbol]
    main.o(.text.generateRandomPosition) refers to main.o(.text.generateRandomNumber) for generateRandomNumber
    main.o(.ARM.exidx.text.generateRandomPosition) refers to main.o(.text.generateRandomPosition) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandle) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.vTaskStepTick) refers to tasks.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime) refers to tasks.o(.text.prvGetExpectedIdleTime) for [Anonymous Symbol]
    gpio.o(i.GPIOIntRegister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntRegisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntUnregister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOIntUnregisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOPinConfigure) refers to gpio.o(.constdata) for .constdata
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i._GPIOIntNumberGet) refers to gpio.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockFreqSet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockGet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockSet) refers to sysctl.o(.emb_text) for SysCtlDelay
    sysctl.o(i.SysCtlDeepSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    sysctl.o(i.SysCtlSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlVCOGet) refers to sysctl.o(.constdata) for .constdata
    uart.o(i.UARTIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    uart.o(i.UARTIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    uart.o(i.UARTIntRegister) refers to uart.o(.constdata) for .constdata
    uart.o(i.UARTIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    uart.o(i.UARTIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    uart.o(i.UARTIntUnregister) refers to uart.o(.constdata) for .constdata
    interrupt.o(i.IntDisable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntEnable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntIsEnabled) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntMasterDisable) refers to cpu.o(.emb_text) for CPUcpsid
    interrupt.o(i.IntMasterEnable) refers to cpu.o(.emb_text) for CPUcpsie
    interrupt.o(i.IntPendClear) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPendSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityMaskGet) refers to cpu.o(.emb_text) for CPUbasepriGet
    interrupt.o(i.IntPriorityMaskSet) refers to cpu.o(.emb_text) for CPUbasepriSet
    interrupt.o(i.IntPrioritySet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntRegister) refers to interrupt.o(vtable) for vtable
    interrupt.o(i.IntUnregister) refers to interrupt.o(i._IntDefaultHandler) for _IntDefaultHandler
    interrupt.o(i.IntUnregister) refers to interrupt.o(vtable) for vtable
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.MainMenuTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.RenderTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.SnakePositionUpdateTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.NormalPowerUpSpawnTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.SpecialPowerUpSpawnTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.EnemySpawnTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.TimeUpdateTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.moveCursorToPosition), (8 bytes).
    Removing main.o(.ARM.exidx.text.initializeHardware), (8 bytes).
    Removing main.o(.ARM.exidx.text.resetGameState), (8 bytes).
    Removing main.o(.ARM.exidx.text.clearScreen), (8 bytes).
    Removing main.o(.ARM.exidx.text.moveCursorToBottom), (8 bytes).
    Removing main.o(.ARM.exidx.text.generateRandomNumber), (8 bytes).
    Removing main.o(.ARM.exidx.text.generateRandomPosition), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (326 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (360 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (46 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (132 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (206 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (74 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (108 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (110 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (94 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (424 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (366 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (480 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (298 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (212 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (54 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (62 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (48 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (62 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (68 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (72 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (28 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (378 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (264 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (70 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetHandle), (210 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks.o(.text.prvSearchForNameWithinSingleList), (228 bytes).
    Removing tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandle), (52 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (270 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (362 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark2), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (248 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (280 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (558 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (668 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (498 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (120 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime), (8 bytes).
    Removing gpio.o(i.GPIOADCTriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIOADCTriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODMATriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIODMATriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODirModeGet), (34 bytes).
    Removing gpio.o(i.GPIOIntClear), (6 bytes).
    Removing gpio.o(i.GPIOIntDisable), (14 bytes).
    Removing gpio.o(i.GPIOIntEnable), (12 bytes).
    Removing gpio.o(i.GPIOIntRegister), (26 bytes).
    Removing gpio.o(i.GPIOIntRegisterPin), (30 bytes).
    Removing gpio.o(i.GPIOIntStatus), (14 bytes).
    Removing gpio.o(i.GPIOIntTypeGet), (70 bytes).
    Removing gpio.o(i.GPIOIntTypeSet), (80 bytes).
    Removing gpio.o(i.GPIOIntUnregister), (22 bytes).
    Removing gpio.o(i.GPIOIntUnregisterPin), (26 bytes).
    Removing gpio.o(i.GPIOPadConfigGet), (248 bytes).
    Removing gpio.o(i.GPIOPinRead), (6 bytes).
    Removing gpio.o(i.GPIOPinTypeADC), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeCAN), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparator), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparatorOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeDIVSCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEPI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetLED), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetMII), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOInput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutputOD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeHibernateRTCCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2C), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2CSCL), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeLCD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeOneWire), (28 bytes).
    Removing gpio.o(i.GPIOPinTypePWM), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeQEI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeSSI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTimer), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTrace), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBAnalog), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBDigital), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeHigh), (30 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeLow), (30 bytes).
    Removing gpio.o(i.GPIOPinWakeStatus), (6 bytes).
    Removing gpio.o(i.GPIOPinWrite), (6 bytes).
    Removing gpio.o(i.GPIOUnlockPin), (24 bytes).
    Removing gpio.o(i._GPIOIntNumberGet), (80 bytes).
    Removing sysctl.o(.emb_text), (6 bytes).
    Removing sysctl.o(i.SysCtlAltClkConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlClockFreqSet), (740 bytes).
    Removing sysctl.o(i.SysCtlClockOutConfig), (20 bytes).
    Removing sysctl.o(i.SysCtlClockSet), (288 bytes).
    Removing sysctl.o(i.SysCtlDeepSleep), (32 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockConfigSet), (112 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockSet), (12 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlFlashSectorSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlFlashSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBDisable), (28 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBEnable), (24 bytes).
    Removing sysctl.o(i.SysCtlIntClear), (12 bytes).
    Removing sysctl.o(i.SysCtlIntDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntRegister), (20 bytes).
    Removing sysctl.o(i.SysCtlIntStatus), (16 bytes).
    Removing sysctl.o(i.SysCtlIntUnregister), (18 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlMOSCConfigSet), (12 bytes).
    Removing sysctl.o(i.SysCtlNMIClear), (16 bytes).
    Removing sysctl.o(i.SysCtlNMIStatus), (12 bytes).
    Removing sysctl.o(i.SysCtlPIOSCCalibrate), (76 bytes).
    Removing sysctl.o(i.SysCtlPWMClockGet), (24 bytes).
    Removing sysctl.o(i.SysCtlPWMClockSet), (20 bytes).
    Removing sysctl.o(i.SysCtlPeripheralClockGating), (68 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOff), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOn), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPresent), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReset), (60 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlReset), (16 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorGet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorSet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetCauseClear), (16 bytes).
    Removing sysctl.o(i.SysCtlResetCauseGet), (12 bytes).
    Removing sysctl.o(i.SysCtlSRAMSizeGet), (16 bytes).
    Removing sysctl.o(i.SysCtlSleep), (4 bytes).
    Removing sysctl.o(i.SysCtlSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlVCOGet), (120 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventClear), (16 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventStatus), (12 bytes).
    Removing uart.o(i.UART9BitAddrSend), (38 bytes).
    Removing uart.o(i.UART9BitAddrSet), (10 bytes).
    Removing uart.o(i.UART9BitDisable), (14 bytes).
    Removing uart.o(i.UART9BitEnable), (14 bytes).
    Removing uart.o(i.UARTBreakCtl), (18 bytes).
    Removing uart.o(i.UARTBusy), (8 bytes).
    Removing uart.o(i.UARTCharGetNonBlocking), (16 bytes).
    Removing uart.o(i.UARTCharPutNonBlocking), (16 bytes).
    Removing uart.o(i.UARTClockSourceGet), (6 bytes).
    Removing uart.o(i.UARTClockSourceSet), (6 bytes).
    Removing uart.o(i.UARTConfigGetExpClk), (46 bytes).
    Removing uart.o(i.UARTDMADisable), (10 bytes).
    Removing uart.o(i.UARTDMAEnable), (8 bytes).
    Removing uart.o(i.UARTDisable), (30 bytes).
    Removing uart.o(i.UARTDisableSIR), (10 bytes).
    Removing uart.o(i.UARTEnable), (20 bytes).
    Removing uart.o(i.UARTEnableSIR), (18 bytes).
    Removing uart.o(i.UARTFIFOEnable), (10 bytes).
    Removing uart.o(i.UARTFIFOLevelGet), (16 bytes).
    Removing uart.o(i.UARTFIFOLevelSet), (6 bytes).
    Removing uart.o(i.UARTFlowControlGet), (8 bytes).
    Removing uart.o(i.UARTFlowControlSet), (12 bytes).
    Removing uart.o(i.UARTIntClear), (4 bytes).
    Removing uart.o(i.UARTIntDisable), (10 bytes).
    Removing uart.o(i.UARTIntEnable), (8 bytes).
    Removing uart.o(i.UARTIntRegister), (88 bytes).
    Removing uart.o(i.UARTIntStatus), (10 bytes).
    Removing uart.o(i.UARTIntUnregister), (88 bytes).
    Removing uart.o(i.UARTLoopbackEnable), (10 bytes).
    Removing uart.o(i.UARTModemControlClear), (14 bytes).
    Removing uart.o(i.UARTModemControlGet), (8 bytes).
    Removing uart.o(i.UARTModemControlSet), (12 bytes).
    Removing uart.o(i.UARTModemStatusGet), (10 bytes).
    Removing uart.o(i.UARTParityModeGet), (8 bytes).
    Removing uart.o(i.UARTParityModeSet), (12 bytes).
    Removing uart.o(i.UARTRxErrorClear), (6 bytes).
    Removing uart.o(i.UARTRxErrorGet), (8 bytes).
    Removing uart.o(i.UARTSmartCardDisable), (10 bytes).
    Removing uart.o(i.UARTSmartCardEnable), (22 bytes).
    Removing uart.o(i.UARTSpaceAvail), (10 bytes).
    Removing uart.o(i.UARTTxIntModeGet), (8 bytes).
    Removing uart.o(i.UARTTxIntModeSet), (12 bytes).
    Removing uart.o(.constdata), (128 bytes).
    Removing cpu.o(.emb_text), (38 bytes).
    Removing interrupt.o(i.IntDisable), (100 bytes).
    Removing interrupt.o(i.IntEnable), (100 bytes).
    Removing interrupt.o(i.IntIsEnabled), (96 bytes).
    Removing interrupt.o(i.IntMasterDisable), (14 bytes).
    Removing interrupt.o(i.IntMasterEnable), (14 bytes).
    Removing interrupt.o(i.IntPendClear), (68 bytes).
    Removing interrupt.o(i.IntPendSet), (84 bytes).
    Removing interrupt.o(i.IntPriorityGet), (28 bytes).
    Removing interrupt.o(i.IntPriorityGroupingGet), (36 bytes).
    Removing interrupt.o(i.IntPriorityGroupingSet), (28 bytes).
    Removing interrupt.o(i.IntPriorityMaskGet), (4 bytes).
    Removing interrupt.o(i.IntPriorityMaskSet), (4 bytes).
    Removing interrupt.o(i.IntPrioritySet), (40 bytes).
    Removing interrupt.o(i.IntRegister), (52 bytes).
    Removing interrupt.o(i.IntTrigger), (12 bytes).
    Removing interrupt.o(i.IntUnregister), (20 bytes).
    Removing interrupt.o(i._IntDefaultHandler), (2 bytes).
    Removing interrupt.o(.constdata), (268 bytes).
    Removing interrupt.o(vtable), (620 bytes).

390 unused section(s) (total 17896 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x000002a8   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x000002c4   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000002e0   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x000002e2   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x000002e6   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x000002e8   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x000002ea   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x000002ec   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000002ec   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000002ec   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x000002f2   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x000002f2   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x000002f6   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x000002f6   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x000002fe   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000300   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000300   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000304   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0000030c   Number         0  startup_tm4c123.o(.text)
    .text                                    0x0000030c   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000420   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x000004aa   Section       16  aeabi_memset4.o(.text)
    .text                                    0x000004ba   Section        0  heapauxi.o(.text)
    .text                                    0x000004c0   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x00000524   Section       78  rt_memclr_w.o(.text)
    .text                                    0x00000572   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x000005bc   Section        0  exit.o(.text)
    .text                                    0x000005d0   Section        8  libspace.o(.text)
    .text                                    0x000005d8   Section        0  sys_exit.o(.text)
    .text                                    0x000005e4   Section        2  use_no_semi.o(.text)
    .text                                    0x000005e6   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x000005e8   Section        0  main.o(.text.EnemySpawnTask)
    [Anonymous Symbol]                       0x000007ec   Section        0  main.o(.text.MainMenuTask)
    [Anonymous Symbol]                       0x00000a10   Section        0  main.o(.text.NormalPowerUpSpawnTask)
    [Anonymous Symbol]                       0x00000ba0   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00000c00   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00000c04   Section        0  main.o(.text.RenderTask)
    [Anonymous Symbol]                       0x00001170   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00001190   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00001194   Section        0  main.o(.text.SnakePositionUpdateTask)
    [Anonymous Symbol]                       0x0000189c   Section        0  main.o(.text.SpecialPowerUpSpawnTask)
    [Anonymous Symbol]                       0x00001ac4   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00001b00   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00001c0c   Section        0  main.o(.text.TimeUpdateTask)
    [Anonymous Symbol]                       0x00001c7c   Section        0  main.o(.text.clearScreen)
    [Anonymous Symbol]                       0x00001cc8   Section        0  tasks.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x00001d48   Section        0  main.o(.text.generateRandomNumber)
    [Anonymous Symbol]                       0x00001dbc   Section        0  main.o(.text.generateRandomPosition)
    [Anonymous Symbol]                       0x00001e38   Section        0  main.o(.text.initializeHardware)
    [Anonymous Symbol]                       0x00001ee8   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x00001f68   Section        0  main.o(.text.moveCursorToBottom)
    [Anonymous Symbol]                       0x00001f74   Section        0  main.o(.text.moveCursorToPosition)
    prvAddCurrentTaskToDelayedList           0x000020b1   Thumb Code   290  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x000020b0   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x000021d5   Thumb Code   340  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x000021d4   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckTasksWaitingTermination          0x00002329   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x00002328   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00002385   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00002384   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x000023c9   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x000023c8   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x00002495   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x00002494   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x000024ad   Thumb Code    38  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x000024ac   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetExpectedIdleTime                   0x000024d5   Thumb Code   124  tasks.o(.text.prvGetExpectedIdleTime)
    [Anonymous Symbol]                       0x000024d4   Section        0  tasks.o(.text.prvGetExpectedIdleTime)
    prvHeapInit                              0x00002551   Thumb Code   188  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x00002550   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x0000260d   Thumb Code   154  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x0000260c   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x000026a9   Thumb Code    44  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x000026a8   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x000026d5   Thumb Code    78  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x000026d4   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x00002725   Thumb Code   326  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x00002724   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x0000286d   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x0000286c   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x000028fd   Thumb Code   198  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x000028fc   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvIsQueueEmpty                          0x000029c5   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x000029c4   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x000029ed   Thumb Code    46  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x000029ec   Section        0  queue.o(.text.prvIsQueueFull)
    prvNotifyQueueSetContainer               0x00002a1d   Thumb Code   216  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x00002a1c   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x00002af5   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00002af4   Section        0  port.o(.text.prvPortStartFirstTask)
    prvResetNextTaskUnblockTime              0x00002b1d   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x00002b1c   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvTaskExitError                         0x00002b59   Thumb Code    76  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00002b58   Section        0  port.o(.text.prvTaskExitError)
    prvUnlockQueue                           0x00002ba5   Thumb Code   204  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00002ba4   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00002c70   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00002e84   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x00002eb0   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00002f10   Section        0  main.o(.text.resetGameState)
    [Anonymous Symbol]                       0x00002fcc   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00003014   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00003044   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00003054   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x000030c0   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x000030fd   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000030fc   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00003110   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00003168   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x000031b4   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00003284   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x000032fc   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x00003508   Section        0  queue.o(.text.vQueueDelete)
    [Anonymous Symbol]                       0x00003538   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x000035a8   Section        0  tasks.o(.text.vTaskDelete)
    [Anonymous Symbol]                       0x000036fc   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00003720   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00003730   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00003774   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x000038f8   Section        0  tasks.o(.text.vTaskPrioritySet)
    [Anonymous Symbol]                       0x00003adc   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00003b88   Section        0  tasks.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x00003bd4   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x00003be4   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00003be4   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00003ca4   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00003dfc   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x00003e24   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00003ec0   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00003fc8   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x0000423c   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00004418   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x00004644   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00004740   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x000047d8   Section        0  tasks.o(.text.xTaskDelayUntil)
    [Anonymous Symbol]                       0x000048f0   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00004928   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x0000493c   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00004b9c   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00004cd4   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x00004e30   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00004fc4   Section        0  tasks.o(.text.xTaskResumeAll)
    i.GPIODirModeSet                         0x000051e6   Section        0  gpio.o(i.GPIODirModeSet)
    i.GPIOPadConfigSet                       0x00005210   Section        0  gpio.o(i.GPIOPadConfigSet)
    i.GPIOPinConfigure                       0x00005380   Section        0  gpio.o(i.GPIOPinConfigure)
    i.GPIOPinTypeUART                        0x000053c4   Section        0  gpio.o(i.GPIOPinTypeUART)
    i.SysCtlClockGet                         0x000053e0   Section        0  sysctl.o(i.SysCtlClockGet)
    i.SysCtlPeripheralEnable                 0x00005534   Section        0  sysctl.o(i.SysCtlPeripheralEnable)
    i.SysCtlPeripheralReady                  0x0000555c   Section        0  sysctl.o(i.SysCtlPeripheralReady)
    i.UARTCharGet                            0x00005588   Section        0  uart.o(i.UARTCharGet)
    i.UARTCharPut                            0x00005594   Section        0  uart.o(i.UARTCharPut)
    i.UARTCharsAvail                         0x000055a0   Section        0  uart.o(i.UARTCharsAvail)
    i.UARTConfigSetExpClk                    0x000055aa   Section        0  uart.o(i.UARTConfigSetExpClk)
    i.UARTFIFODisable                        0x00005618   Section        0  uart.o(i.UARTFIFODisable)
    $v0                                      0x00005622   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x00005622   Section       26  fpinit.o(x$fpl$fpinit)
    g_ppui32GPIOIntMapBlizzard               0x0000563c   Data         192  gpio.o(.constdata)
    .constdata                               0x0000563c   Section      552  gpio.o(.constdata)
    g_ppui32GPIOIntMapSnowflake              0x000056fc   Data         216  gpio.o(.constdata)
    g_pui32GPIOBaseAddrs                     0x000057d4   Data         144  gpio.o(.constdata)
    g_pui32VCOFrequencies                    0x00005864   Data           8  sysctl.o(.constdata)
    .constdata                               0x00005864   Section      596  sysctl.o(.constdata)
    g_pui32Xtals                             0x0000586c   Data         108  sysctl.o(.constdata)
    g_pppui32XTALtoVCO                       0x000058d8   Data         432  sysctl.o(.constdata)
    g_sXTALtoMEMTIM                          0x00005a88   Data          48  sysctl.o(.constdata)
    .L__const.EnemySpawnTask.enemyRemoveRenderRequest 0x00005ab8   Data          24  main.o(.rodata..L__const.EnemySpawnTask.enemyRemoveRenderRequest)
    .L__const.EnemySpawnTask.enemyRenderRequest 0x00005ad0   Data          24  main.o(.rodata..L__const.EnemySpawnTask.enemyRenderRequest)
    .L__const.MainMenuTask.gameStartRenderRequest 0x00005ae8   Data          24  main.o(.rodata..L__const.MainMenuTask.gameStartRenderRequest)
    .L__const.NormalPowerUpSpawnTask.powerUpRenderRequest 0x00005b00   Data          24  main.o(.rodata..L__const.NormalPowerUpSpawnTask.powerUpRenderRequest)
    .L__const.SnakePositionUpdateTask.lossMessageRenderRequest 0x00005b18   Data          24  main.o(.rodata..L__const.SnakePositionUpdateTask.lossMessageRenderRequest)
    .L__const.SnakePositionUpdateTask.powerUpRemoveRenderRequest 0x00005b30   Data          24  main.o(.rodata..L__const.SnakePositionUpdateTask.powerUpRemoveRenderRequest)
    .L__const.SnakePositionUpdateTask.snakeUpdateRenderRequest 0x00005b48   Data          24  main.o(.rodata..L__const.SnakePositionUpdateTask.snakeUpdateRenderRequest)
    .L__const.SnakePositionUpdateTask.updateScoreRenderRequest 0x00005b60   Data          24  main.o(.rodata..L__const.SnakePositionUpdateTask.updateScoreRenderRequest)
    .L__const.SnakePositionUpdateTask.winMessageRenderRequest 0x00005b78   Data          24  main.o(.rodata..L__const.SnakePositionUpdateTask.winMessageRenderRequest)
    .L__const.SpecialPowerUpSpawnTask.powerUpRemoveRenderRequest 0x00005b90   Data          24  main.o(.rodata..L__const.SpecialPowerUpSpawnTask.powerUpRemoveRenderRequest)
    .L__const.SpecialPowerUpSpawnTask.powerUpRenderRequest 0x00005ba8   Data          24  main.o(.rodata..L__const.SpecialPowerUpSpawnTask.powerUpRenderRequest)
    .L__const.TimeUpdateTask.timeUpdateRenderRequest 0x00005bc0   Data          24  main.o(.rodata..L__const.TimeUpdateTask.timeUpdateRenderRequest)
    .L__const.RenderTask.gameHeader          0x00005bd8   Data          22  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00005bd8   Section        0  main.o(.rodata.str1.1)
    .L__const.RenderTask.welcomeString       0x00005bee   Data          51  main.o(.rodata.str1.1)
    .L__const.RenderTask.movekeyInstructionsString 0x00005c21   Data          29  main.o(.rodata.str1.1)
    .L__const.RenderTask.symbolInstructionsString 0x00005c3e   Data          80  main.o(.rodata.str1.1)
    .L.str.2                                 0x00005c8e   Data           6  main.o(.rodata.str1.1)
    .L.str.6                                 0x00005c94   Data           5  main.o(.rodata.str1.1)
    .L.str.1                                 0x00005c99   Data           7  main.o(.rodata.str1.1)
    .L.str.4                                 0x00005ca0   Data          17  main.o(.rodata.str1.1)
    .L.str.3                                 0x00005cb1   Data          16  main.o(.rodata.str1.1)
    .L.str                                   0x00005cc1   Data          10  main.o(.rodata.str1.1)
    .L.str.5                                 0x00005ccb   Data           6  main.o(.rodata.str1.1)
    .L.str                                   0x00005cd1   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00005cd1   Section        0  tasks.o(.rodata.str1.1)
    uxCriticalNesting                        0x2000000c   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x2000000c   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000010   Section       96  libspace.o(.bss)
    generateRandomNumber.x                   0x20000248   Data           4  main.o(.bss.generateRandomNumber.x)
    [Anonymous Symbol]                       0x20000248   Section        0  main.o(.bss.generateRandomNumber.x)
    pxDelayedTaskList                        0x20000254   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000254   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x20000258   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x20000258   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x2000025c   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x2000025c   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxReadyTasksLists                        0x20000260   Data         120  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000260   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x200002e0   Data       16384  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x200002e0   Section        0  heap_4.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x200042e0   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x200042e0   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x200042e4   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x200042e4   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    ulStoppedTimerCompensation               0x200042e8   Data           4  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x200042e8   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x200042ec   Data           4  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x200042ec   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x200042f0   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x200042f0   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x200042f4   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x200042f4   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x200042f8   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x200042f8   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x200042fc   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x200042fc   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20004300   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20004300   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xBlockAllocatedBit                       0x20004308   Data           4  heap_4.o(.bss.xBlockAllocatedBit)
    [Anonymous Symbol]                       0x20004308   Section        0  heap_4.o(.bss.xBlockAllocatedBit)
    xDelayedTaskList1                        0x2000430c   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x2000430c   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20004320   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20004320   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20004334   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20004334   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20004338   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20004338   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMaximumPossibleSuppressedTicks          0x2000433c   Data           4  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x2000433c   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xMinimumEverFreeBytesRemaining           0x20004340   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20004340   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20004344   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20004344   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20004348   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20004348   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x2000434c   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x2000434c   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20004350   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20004350   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20004354   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20004354   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20004358   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20004358   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x2000436c   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x2000436c   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20004370   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20004370   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20004378   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20004378   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x2000438c   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x2000438c   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x200043a0   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x200043a0   Section        0  tasks.o(.bss.xTickCount)
    xYieldPending                            0x200043a4   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x200043a4   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x200043a8   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x200043a8   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x200043a8   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x200043a8   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x200045a8   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x000002a9   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x000002c5   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x000002e1   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x000002e3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x000002e9   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x000002ed   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000002ed   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000002ed   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x000002f3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x000002f3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x000002f7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x000002f7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x000002ff   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000301   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000301   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000305   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x0000030d   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x00000315   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x00000317   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000319   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x0000031b   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x0000031d   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000321   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x00000327   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x00000329   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x0000032b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x0000032d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x0000032f   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x00000331   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x00000333   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x00000335   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x00000337   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x00000339   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x0000033b   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x0000033d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x0000033f   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x0000034b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x000003ab   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x00000401   Thumb Code     0  startup_tm4c123.o(.text)
    __aeabi_memcpy                           0x00000421   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x00000421   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x00000487   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x000004ab   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x000004ab   Thumb Code     0  aeabi_memset4.o(.text)
    __use_two_region_memory                  0x000004bb   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x000004bd   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x000004bf   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x000004c1   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x000004c1   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x000004c1   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x00000509   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x00000525   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x00000525   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x00000525   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x00000529   Thumb Code    74  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x00000573   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x000005bd   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x000005d1   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x000005d1   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x000005d1   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x000005d9   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x000005e5   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x000005e5   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x000005e7   Thumb Code     0  indicate_semi.o(.text)
    EnemySpawnTask                           0x000005e9   Thumb Code   516  main.o(.text.EnemySpawnTask)
    MainMenuTask                             0x000007ed   Thumb Code   546  main.o(.text.MainMenuTask)
    NormalPowerUpSpawnTask                   0x00000a11   Thumb Code   390  main.o(.text.NormalPowerUpSpawnTask)
    PendSV_Handler                           0x00000ba1   Thumb Code   100  port.o(.text.PendSV_Handler)
    RenderTask                               0x00000c05   Thumb Code  1382  main.o(.text.RenderTask)
    SVC_Handler                              0x00001171   Thumb Code    36  port.o(.text.SVC_Handler)
    SnakePositionUpdateTask                  0x00001195   Thumb Code  1798  main.o(.text.SnakePositionUpdateTask)
    SpecialPowerUpSpawnTask                  0x0000189d   Thumb Code   552  main.o(.text.SpecialPowerUpSpawnTask)
    SysTick_Handler                          0x00001ac5   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemInit                               0x00001b01   Thumb Code   268  system_tm4c123.o(.text.SystemInit)
    TimeUpdateTask                           0x00001c0d   Thumb Code   110  main.o(.text.TimeUpdateTask)
    clearScreen                              0x00001c7d   Thumb Code    76  main.o(.text.clearScreen)
    eTaskConfirmSleepModeStatus              0x00001cc9   Thumb Code   128  tasks.o(.text.eTaskConfirmSleepModeStatus)
    generateRandomNumber                     0x00001d49   Thumb Code   114  main.o(.text.generateRandomNumber)
    generateRandomPosition                   0x00001dbd   Thumb Code   124  main.o(.text.generateRandomPosition)
    initializeHardware                       0x00001e39   Thumb Code   176  main.o(.text.initializeHardware)
    main                                     0x00001ee9   Thumb Code   126  main.o(.text.main)
    moveCursorToBottom                       0x00001f69   Thumb Code    12  main.o(.text.moveCursorToBottom)
    moveCursorToPosition                     0x00001f75   Thumb Code   314  main.o(.text.moveCursorToPosition)
    pvPortMalloc                             0x00002c71   Thumb Code   530  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x00002e85   Thumb Code    44  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x00002eb1   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    resetGameState                           0x00002f11   Thumb Code   186  main.o(.text.resetGameState)
    uxListRemove                             0x00002fcd   Thumb Code    72  list.o(.text.uxListRemove)
    vListInitialise                          0x00003015   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00003045   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00003055   Thumb Code   106  list.o(.text.vListInsert)
    vListInsertEnd                           0x000030c1   Thumb Code    58  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x00003111   Thumb Code    86  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00003169   Thumb Code    74  port.o(.text.vPortExitCritical)
    vPortFree                                0x000031b5   Thumb Code   206  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00003285   Thumb Code   120  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x000032fd   Thumb Code   524  port.o(.text.vPortSuppressTicksAndSleep)
    vQueueDelete                             0x00003509   Thumb Code    48  queue.o(.text.vQueueDelete)
    vTaskDelay                               0x00003539   Thumb Code   110  tasks.o(.text.vTaskDelay)
    vTaskDelete                              0x000035a9   Thumb Code   340  tasks.o(.text.vTaskDelete)
    vTaskInternalSetTimeOutState             0x000036fd   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00003721   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00003731   Thumb Code    66  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPriorityDisinheritAfterTimeout      0x00003775   Thumb Code   386  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskPrioritySet                         0x000038f9   Thumb Code   484  tasks.o(.text.vTaskPrioritySet)
    vTaskStartScheduler                      0x00003add   Thumb Code   170  tasks.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x00003b89   Thumb Code    76  tasks.o(.text.vTaskStepTick)
    vTaskSuspendAll                          0x00003bd5   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00003be5   Thumb Code   190  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x00003ca5   Thumb Code   342  port.o(.text.xPortStartScheduler)
    xQueueCreateMutex                        0x00003dfd   Thumb Code    38  queue.o(.text.xQueueCreateMutex)
    xQueueGenericCreate                      0x00003e25   Thumb Code   154  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x00003ec1   Thumb Code   264  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x00003fc9   Thumb Code   628  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x0000423d   Thumb Code   476  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x00004419   Thumb Code   556  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x00004645   Thumb Code   252  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00004741   Thumb Code   152  tasks.o(.text.xTaskCreate)
    xTaskDelayUntil                          0x000047d9   Thumb Code   278  tasks.o(.text.xTaskDelayUntil)
    xTaskGetSchedulerState                   0x000048f1   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x00004929   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x0000493d   Thumb Code   608  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00004b9d   Thumb Code   312  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x00004cd5   Thumb Code   348  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x00004e31   Thumb Code   402  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00004fc5   Thumb Code   546  tasks.o(.text.xTaskResumeAll)
    GPIODirModeSet                           0x000051e7   Thumb Code    40  gpio.o(i.GPIODirModeSet)
    GPIOPadConfigSet                         0x00005211   Thumb Code   354  gpio.o(i.GPIOPadConfigSet)
    GPIOPinConfigure                         0x00005381   Thumb Code    60  gpio.o(i.GPIOPinConfigure)
    GPIOPinTypeUART                          0x000053c5   Thumb Code    28  gpio.o(i.GPIOPinTypeUART)
    SysCtlClockGet                           0x000053e1   Thumb Code   304  sysctl.o(i.SysCtlClockGet)
    SysCtlPeripheralEnable                   0x00005535   Thumb Code    36  sysctl.o(i.SysCtlPeripheralEnable)
    SysCtlPeripheralReady                    0x0000555d   Thumb Code    40  sysctl.o(i.SysCtlPeripheralReady)
    UARTCharGet                              0x00005589   Thumb Code    12  uart.o(i.UARTCharGet)
    UARTCharPut                              0x00005595   Thumb Code    12  uart.o(i.UARTCharPut)
    UARTCharsAvail                           0x000055a1   Thumb Code    10  uart.o(i.UARTCharsAvail)
    UARTConfigSetExpClk                      0x000055ab   Thumb Code   110  uart.o(i.UARTConfigSetExpClk)
    UARTFIFODisable                          0x00005619   Thumb Code    10  uart.o(i.UARTFIFODisable)
    _fp_init                                 0x00005623   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x0000563b   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x0000563b   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    uxTopUsedPriority                        0x00005cd8   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x00005cdc   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00005cfc   Number         0  anon$$obj.o(Region$$Table)
    LastDirection                            0x20000000   Data           1  main.o(.data.LastDirection)
    SnakeSpeed                               0x20000004   Data           4  main.o(.data.SnakeSpeed)
    SystemCoreClock                          0x20000008   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    __libspace_start                         0x20000010   Data          96  libspace.o(.bss)
    EnemySpawnTaskHandle                     0x20000070   Data           4  main.o(.bss.EnemySpawnTaskHandle)
    __temporary_stack_top$libspace           0x20000070   Data           0  libspace.o(.bss)
    GameState                                0x20000074   Data         428  main.o(.bss.GameState)
    GameStateLock                            0x20000220   Data           4  main.o(.bss.GameStateLock)
    GenerateRandomNumberLock                 0x20000224   Data           4  main.o(.bss.GenerateRandomNumberLock)
    MainMenuTaskHandle                       0x20000228   Data           4  main.o(.bss.MainMenuTaskHandle)
    NormalPowerUpSemaphore                   0x2000022c   Data           4  main.o(.bss.NormalPowerUpSemaphore)
    NormalPowerUpSpawnTaskHandle             0x20000230   Data           4  main.o(.bss.NormalPowerUpSpawnTaskHandle)
    RenderQueue                              0x20000234   Data           4  main.o(.bss.RenderQueue)
    RenderTaskHandle                         0x20000238   Data           4  main.o(.bss.RenderTaskHandle)
    SnakePositionUpdateTaskHandle            0x2000023c   Data           4  main.o(.bss.SnakePositionUpdateTaskHandle)
    SpecialPowerUpSpawnTaskHandle            0x20000240   Data           4  main.o(.bss.SpecialPowerUpSpawnTaskHandle)
    TimeUpdateTaskHandle                     0x20000244   Data           4  main.o(.bss.TimeUpdateTaskHandle)
    inGame                                   0x2000024c   Data           1  main.o(.bss.inGame)
    pxCurrentTCB                             0x20000250   Data           4  tasks.o(.bss.pxCurrentTCB)
    score                                    0x200002d8   Data           4  main.o(.bss.score)
    time                                     0x200002dc   Data           4  main.o(.bss.time)
    wonLast                                  0x20004304   Data           1  main.o(.bss.wonLast)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0000030d

  Load Region LR_1 (Base: 0x00000000, Size: 0x00005d0c, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00005cfc, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO           74    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO         1553  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO         1722    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000001a   Code   RO         1724    !!handler_copy      c_w.l(__scatter_copy.o)
    0x000002c2   0x000002c2   0x00000002   PAD
    0x000002c4   0x000002c4   0x0000001c   Code   RO         1726    !!handler_zi        c_w.l(__scatter_zi.o)
    0x000002e0   0x000002e0   0x00000002   Code   RO         1584    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x000002e2   0x000002e2   0x00000004   Code   RO         1590    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1593    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1595    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1598    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1600    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1602    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1605    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1607    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1609    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1611    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1613    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1615    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1617    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1619    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1621    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1623    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1625    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1629    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1631    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1633    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1635    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000002   Code   RO         1636    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x000002e8   0x000002e8   0x00000002   Code   RO         1658    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1673    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1675    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1678    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1681    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1683    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1686    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000002   Code   RO         1687    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x000002ec   0x000002ec   0x00000000   Code   RO         1555    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x000002ec   0x000002ec   0x00000000   Code   RO         1561    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x000002ec   0x000002ec   0x00000006   Code   RO         1573    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x000002f2   0x000002f2   0x00000000   Code   RO         1563    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x000002f2   0x000002f2   0x00000004   Code   RO         1564    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO         1566    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x000002f6   0x000002f6   0x00000008   Code   RO         1567    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x000002fe   0x000002fe   0x00000002   Code   RO         1588    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000300   0x00000300   0x00000000   Code   RO         1638    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000300   0x00000300   0x00000004   Code   RO         1639    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000304   0x00000304   0x00000006   Code   RO         1640    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000030a   0x0000030a   0x00000002   PAD
    0x0000030c   0x0000030c   0x00000114   Code   RO           75  * .text               startup_tm4c123.o
    0x00000420   0x00000420   0x0000008a   Code   RO         1547    .text               c_w.l(rt_memcpy_v6.o)
    0x000004aa   0x000004aa   0x00000010   Code   RO         1549    .text               c_w.l(aeabi_memset4.o)
    0x000004ba   0x000004ba   0x00000006   Code   RO         1551    .text               c_w.l(heapauxi.o)
    0x000004c0   0x000004c0   0x00000064   Code   RO         1556    .text               c_w.l(rt_memcpy_w.o)
    0x00000524   0x00000524   0x0000004e   Code   RO         1558    .text               c_w.l(rt_memclr_w.o)
    0x00000572   0x00000572   0x0000004a   Code   RO         1575    .text               c_w.l(sys_stackheap_outer.o)
    0x000005bc   0x000005bc   0x00000012   Code   RO         1577    .text               c_w.l(exit.o)
    0x000005ce   0x000005ce   0x00000002   PAD
    0x000005d0   0x000005d0   0x00000008   Code   RO         1585    .text               c_w.l(libspace.o)
    0x000005d8   0x000005d8   0x0000000c   Code   RO         1648    .text               c_w.l(sys_exit.o)
    0x000005e4   0x000005e4   0x00000002   Code   RO         1663    .text               c_w.l(use_no_semi.o)
    0x000005e6   0x000005e6   0x00000000   Code   RO         1665    .text               c_w.l(indicate_semi.o)
    0x000005e6   0x000005e6   0x00000002   PAD
    0x000005e8   0x000005e8   0x00000204   Code   RO           14    .text.EnemySpawnTask  main.o
    0x000007ec   0x000007ec   0x00000222   Code   RO            4    .text.MainMenuTask  main.o
    0x00000a0e   0x00000a0e   0x00000002   PAD
    0x00000a10   0x00000a10   0x00000186   Code   RO           10    .text.NormalPowerUpSpawnTask  main.o
    0x00000b96   0x00000b96   0x0000000a   PAD
    0x00000ba0   0x00000ba0   0x00000064   Code   RO          134    .text.PendSV_Handler  port.o
    0x00000c04   0x00000c04   0x00000566   Code   RO            6    .text.RenderTask    main.o
    0x0000116a   0x0000116a   0x00000006   PAD
    0x00001170   0x00001170   0x00000024   Code   RO          118    .text.SVC_Handler   port.o
    0x00001194   0x00001194   0x00000706   Code   RO            8    .text.SnakePositionUpdateTask  main.o
    0x0000189a   0x0000189a   0x00000002   PAD
    0x0000189c   0x0000189c   0x00000228   Code   RO           12    .text.SpecialPowerUpSpawnTask  main.o
    0x00001ac4   0x00001ac4   0x0000003c   Code   RO          136    .text.SysTick_Handler  port.o
    0x00001b00   0x00001b00   0x0000010c   Code   RO           86    .text.SystemInit    system_tm4c123.o
    0x00001c0c   0x00001c0c   0x0000006e   Code   RO           16    .text.TimeUpdateTask  main.o
    0x00001c7a   0x00001c7a   0x00000002   PAD
    0x00001c7c   0x00001c7c   0x0000004c   Code   RO           24    .text.clearScreen   main.o
    0x00001cc8   0x00001cc8   0x00000080   Code   RO          363    .text.eTaskConfirmSleepModeStatus  tasks.o
    0x00001d48   0x00001d48   0x00000072   Code   RO           28    .text.generateRandomNumber  main.o
    0x00001dba   0x00001dba   0x00000002   PAD
    0x00001dbc   0x00001dbc   0x0000007c   Code   RO           30    .text.generateRandomPosition  main.o
    0x00001e38   0x00001e38   0x000000b0   Code   RO           20    .text.initializeHardware  main.o
    0x00001ee8   0x00001ee8   0x0000007e   Code   RO            2    .text.main          main.o
    0x00001f66   0x00001f66   0x00000002   PAD
    0x00001f68   0x00001f68   0x0000000c   Code   RO           26    .text.moveCursorToBottom  main.o
    0x00001f74   0x00001f74   0x0000013a   Code   RO           18    .text.moveCursorToPosition  main.o
    0x000020ae   0x000020ae   0x00000002   PAD
    0x000020b0   0x000020b0   0x00000122   Code   RO          287    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x000021d2   0x000021d2   0x00000002   PAD
    0x000021d4   0x000021d4   0x00000154   Code   RO          275    .text.prvAddNewTaskToReadyList  tasks.o
    0x00002328   0x00002328   0x0000005a   Code   RO          403    .text.prvCheckTasksWaitingTermination  tasks.o
    0x00002382   0x00002382   0x00000002   PAD
    0x00002384   0x00002384   0x00000042   Code   RO          224    .text.prvCopyDataFromQueue  queue.o
    0x000023c6   0x000023c6   0x00000002   PAD
    0x000023c8   0x000023c8   0x000000cc   Code   RO          210    .text.prvCopyDataToQueue  queue.o
    0x00002494   0x00002494   0x00000018   Code   RO          281    .text.prvDeleteTCB  tasks.o
    0x000024ac   0x000024ac   0x00000026   Code   RO          228    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x000024d2   0x000024d2   0x00000002   PAD
    0x000024d4   0x000024d4   0x0000007c   Code   RO          405    .text.prvGetExpectedIdleTime  tasks.o
    0x00002550   0x00002550   0x000000bc   Code   RO          157    .text.prvHeapInit   heap_4.o
    0x0000260c   0x0000260c   0x0000009a   Code   RO          313    .text.prvIdleTask   tasks.o
    0x000026a6   0x000026a6   0x00000002   PAD
    0x000026a8   0x000026a8   0x0000002c   Code   RO          194    .text.prvInitialiseMutex  queue.o
    0x000026d4   0x000026d4   0x0000004e   Code   RO          190    .text.prvInitialiseNewQueue  queue.o
    0x00002722   0x00002722   0x00000002   PAD
    0x00002724   0x00002724   0x00000146   Code   RO          273    .text.prvInitialiseNewTask  tasks.o
    0x0000286a   0x0000286a   0x00000002   PAD
    0x0000286c   0x0000286c   0x0000008e   Code   RO          401    .text.prvInitialiseTaskLists  tasks.o
    0x000028fa   0x000028fa   0x00000002   PAD
    0x000028fc   0x000028fc   0x000000c6   Code   RO          159    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x000029c2   0x000029c2   0x00000002   PAD
    0x000029c4   0x000029c4   0x00000028   Code   RO          226    .text.prvIsQueueEmpty  queue.o
    0x000029ec   0x000029ec   0x0000002e   Code   RO          214    .text.prvIsQueueFull  queue.o
    0x00002a1a   0x00002a1a   0x00000002   PAD
    0x00002a1c   0x00002a1c   0x000000d8   Code   RO          212    .text.prvNotifyQueueSetContainer  queue.o
    0x00002af4   0x00002af4   0x00000028   Code   RO          126    .text.prvPortStartFirstTask  port.o
    0x00002b1c   0x00002b1c   0x0000003c   Code   RO          279    .text.prvResetNextTaskUnblockTime  tasks.o
    0x00002b58   0x00002b58   0x0000004c   Code   RO          116    .text.prvTaskExitError  port.o
    0x00002ba4   0x00002ba4   0x000000cc   Code   RO          216    .text.prvUnlockQueue  queue.o
    0x00002c70   0x00002c70   0x00000212   Code   RO          155    .text.pvPortMalloc  heap_4.o
    0x00002e82   0x00002e82   0x00000002   PAD
    0x00002e84   0x00002e84   0x0000002c   Code   RO          385    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x00002eb0   0x00002eb0   0x0000005e   Code   RO          114    .text.pxPortInitialiseStack  port.o
    0x00002f0e   0x00002f0e   0x00000002   PAD
    0x00002f10   0x00002f10   0x000000ba   Code   RO           22    .text.resetGameState  main.o
    0x00002fca   0x00002fca   0x00000002   PAD
    0x00002fcc   0x00002fcc   0x00000048   Code   RO          105    .text.uxListRemove  list.o
    0x00003014   0x00003014   0x0000002e   Code   RO           97    .text.vListInitialise  list.o
    0x00003042   0x00003042   0x00000002   PAD
    0x00003044   0x00003044   0x0000000e   Code   RO           99    .text.vListInitialiseItem  list.o
    0x00003052   0x00003052   0x00000002   PAD
    0x00003054   0x00003054   0x0000006a   Code   RO          103    .text.vListInsert   list.o
    0x000030be   0x000030be   0x00000002   PAD
    0x000030c0   0x000030c0   0x0000003a   Code   RO          101    .text.vListInsertEnd  list.o
    0x000030fa   0x000030fa   0x00000002   PAD
    0x000030fc   0x000030fc   0x00000014   Code   RO          124    .text.vPortEnableVFP  port.o
    0x00003110   0x00003110   0x00000056   Code   RO          130    .text.vPortEnterCritical  port.o
    0x00003166   0x00003166   0x00000002   PAD
    0x00003168   0x00003168   0x0000004a   Code   RO          132    .text.vPortExitCritical  port.o
    0x000031b2   0x000031b2   0x00000002   PAD
    0x000031b4   0x000031b4   0x000000ce   Code   RO          161    .text.vPortFree     heap_4.o
    0x00003282   0x00003282   0x00000002   PAD
    0x00003284   0x00003284   0x00000078   Code   RO          122    .text.vPortSetupTimerInterrupt  port.o
    0x000032fc   0x000032fc   0x0000020c   Code   RO          138    .text.vPortSuppressTicksAndSleep  port.o
    0x00003508   0x00003508   0x00000030   Code   RO          242    .text.vQueueDelete  queue.o
    0x00003538   0x00003538   0x0000006e   Code   RO          291    .text.vTaskDelay    tasks.o
    0x000035a6   0x000035a6   0x00000002   PAD
    0x000035a8   0x000035a8   0x00000154   Code   RO          277    .text.vTaskDelete   tasks.o
    0x000036fc   0x000036fc   0x00000024   Code   RO          353    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00003720   0x00003720   0x0000000e   Code   RO          357    .text.vTaskMissedYield  tasks.o
    0x0000372e   0x0000372e   0x00000002   PAD
    0x00003730   0x00003730   0x00000042   Code   RO          343    .text.vTaskPlaceOnEventList  tasks.o
    0x00003772   0x00003772   0x00000002   PAD
    0x00003774   0x00003774   0x00000182   Code   RO          381    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x000038f6   0x000038f6   0x00000002   PAD
    0x000038f8   0x000038f8   0x000001e4   Code   RO          299    .text.vTaskPrioritySet  tasks.o
    0x00003adc   0x00003adc   0x000000aa   Code   RO          311    .text.vTaskStartScheduler  tasks.o
    0x00003b86   0x00003b86   0x00000002   PAD
    0x00003b88   0x00003b88   0x0000004c   Code   RO          337    .text.vTaskStepTick  tasks.o
    0x00003bd4   0x00003bd4   0x00000010   Code   RO          285    .text.vTaskSuspendAll  tasks.o
    0x00003be4   0x00003be4   0x000000be   Code   RO          303    .text.vTaskSwitchContext  tasks.o
    0x00003ca2   0x00003ca2   0x00000002   PAD
    0x00003ca4   0x00003ca4   0x00000156   Code   RO          120    .text.xPortStartScheduler  port.o
    0x00003dfa   0x00003dfa   0x00000002   PAD
    0x00003dfc   0x00003dfc   0x00000026   Code   RO          192    .text.xQueueCreateMutex  queue.o
    0x00003e22   0x00003e22   0x00000002   PAD
    0x00003e24   0x00003e24   0x0000009a   Code   RO          188    .text.xQueueGenericCreate  queue.o
    0x00003ebe   0x00003ebe   0x00000002   PAD
    0x00003ec0   0x00003ec0   0x00000108   Code   RO          186    .text.xQueueGenericReset  queue.o
    0x00003fc8   0x00003fc8   0x00000274   Code   RO          202    .text.xQueueGenericSend  queue.o
    0x0000423c   0x0000423c   0x000001dc   Code   RO          222    .text.xQueueReceive  queue.o
    0x00004418   0x00004418   0x0000022c   Code   RO          206    .text.xQueueSemaphoreTake  queue.o
    0x00004644   0x00004644   0x000000fc   Code   RO          355    .text.xTaskCheckForTimeOut  tasks.o
    0x00004740   0x00004740   0x00000098   Code   RO          271    .text.xTaskCreate   tasks.o
    0x000047d8   0x000047d8   0x00000116   Code   RO          283    .text.xTaskDelayUntil  tasks.o
    0x000048ee   0x000048ee   0x00000002   PAD
    0x000048f0   0x000048f0   0x00000038   Code   RO          375    .text.xTaskGetSchedulerState  tasks.o
    0x00004928   0x00004928   0x00000014   Code   RO          319    .text.xTaskGetTickCount  tasks.o
    0x0000493c   0x0000493c   0x00000260   Code   RO          317    .text.xTaskIncrementTick  tasks.o
    0x00004b9c   0x00004b9c   0x00000138   Code   RO          379    .text.xTaskPriorityDisinherit  tasks.o
    0x00004cd4   0x00004cd4   0x0000015c   Code   RO          377    .text.xTaskPriorityInherit  tasks.o
    0x00004e30   0x00004e30   0x00000192   Code   RO          347    .text.xTaskRemoveFromEventList  tasks.o
    0x00004fc2   0x00004fc2   0x00000002   PAD
    0x00004fc4   0x00004fc4   0x00000222   Code   RO          289    .text.xTaskResumeAll  tasks.o
    0x000051e6   0x000051e6   0x00000028   Code   RO          441    i.GPIODirModeSet    driverlib.lib(gpio.o)
    0x0000520e   0x0000520e   0x00000002   PAD
    0x00005210   0x00005210   0x00000170   Code   RO          453    i.GPIOPadConfigSet  driverlib.lib(gpio.o)
    0x00005380   0x00005380   0x00000044   Code   RO          454    i.GPIOPinConfigure  driverlib.lib(gpio.o)
    0x000053c4   0x000053c4   0x0000001c   Code   RO          477    i.GPIOPinTypeUART   driverlib.lib(gpio.o)
    0x000053e0   0x000053e0   0x00000154   Code   RO          777    i.SysCtlClockGet    driverlib.lib(sysctl.o)
    0x00005534   0x00005534   0x00000028   Code   RO          808    i.SysCtlPeripheralEnable  driverlib.lib(sysctl.o)
    0x0000555c   0x0000555c   0x0000002c   Code   RO          812    i.SysCtlPeripheralReady  driverlib.lib(sysctl.o)
    0x00005588   0x00005588   0x0000000c   Code   RO         1134    i.UARTCharGet       driverlib.lib(uart.o)
    0x00005594   0x00005594   0x0000000c   Code   RO         1136    i.UARTCharPut       driverlib.lib(uart.o)
    0x000055a0   0x000055a0   0x0000000a   Code   RO         1138    i.UARTCharsAvail    driverlib.lib(uart.o)
    0x000055aa   0x000055aa   0x0000006e   Code   RO         1142    i.UARTConfigSetExpClk  driverlib.lib(uart.o)
    0x00005618   0x00005618   0x0000000a   Code   RO         1149    i.UARTFIFODisable   driverlib.lib(uart.o)
    0x00005622   0x00005622   0x0000001a   Code   RO         1646    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x0000563c   0x0000563c   0x00000228   Data   RO          486    .constdata          driverlib.lib(gpio.o)
    0x00005864   0x00005864   0x00000254   Data   RO          830    .constdata          driverlib.lib(sysctl.o)
    0x00005ab8   0x00005ab8   0x00000018   Data   RO           61    .rodata..L__const.EnemySpawnTask.enemyRemoveRenderRequest  main.o
    0x00005ad0   0x00005ad0   0x00000018   Data   RO           60    .rodata..L__const.EnemySpawnTask.enemyRenderRequest  main.o
    0x00005ae8   0x00005ae8   0x00000018   Data   RO           45    .rodata..L__const.MainMenuTask.gameStartRenderRequest  main.o
    0x00005b00   0x00005b00   0x00000018   Data   RO           57    .rodata..L__const.NormalPowerUpSpawnTask.powerUpRenderRequest  main.o
    0x00005b18   0x00005b18   0x00000018   Data   RO           54    .rodata..L__const.SnakePositionUpdateTask.lossMessageRenderRequest  main.o
    0x00005b30   0x00005b30   0x00000018   Data   RO           53    .rodata..L__const.SnakePositionUpdateTask.powerUpRemoveRenderRequest  main.o
    0x00005b48   0x00005b48   0x00000018   Data   RO           52    .rodata..L__const.SnakePositionUpdateTask.snakeUpdateRenderRequest  main.o
    0x00005b60   0x00005b60   0x00000018   Data   RO           56    .rodata..L__const.SnakePositionUpdateTask.updateScoreRenderRequest  main.o
    0x00005b78   0x00005b78   0x00000018   Data   RO           55    .rodata..L__const.SnakePositionUpdateTask.winMessageRenderRequest  main.o
    0x00005b90   0x00005b90   0x00000018   Data   RO           59    .rodata..L__const.SpecialPowerUpSpawnTask.powerUpRemoveRenderRequest  main.o
    0x00005ba8   0x00005ba8   0x00000018   Data   RO           58    .rodata..L__const.SpecialPowerUpSpawnTask.powerUpRenderRequest  main.o
    0x00005bc0   0x00005bc0   0x00000018   Data   RO           62    .rodata..L__const.TimeUpdateTask.timeUpdateRenderRequest  main.o
    0x00005bd8   0x00005bd8   0x000000f9   Data   RO           42    .rodata.str1.1      main.o
    0x00005cd1   0x00005cd1   0x00000005   Data   RO          423    .rodata.str1.1      tasks.o
    0x00005cd6   0x00005cd6   0x00000002   PAD
    0x00005cd8   0x00005cd8   0x00000004   Data   RO          408    .rodata.uxTopUsedPriority  tasks.o
    0x00005cdc   0x00005cdc   0x00000020   Data   RO         1721    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00005cfc, Size: 0x00000010, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00005cfc   0x00000001   Data   RW           33    .data.LastDirection  main.o
    0x20000001   0x00005cfd   0x00000003   PAD
    0x20000004   0x00005d00   0x00000004   Data   RW           32    .data.SnakeSpeed    main.o
    0x20000008   0x00005d04   0x00000004   Data   RW           88    .data.SystemCoreClock  system_tm4c123.o
    0x2000000c   0x00005d08   0x00000004   Data   RW          144    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000010, Load base: 0x00005d0c, Size: 0x00004598, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000010        -       0x00000060   Zero   RW         1586    .bss                c_w.l(libspace.o)
    0x20000070        -       0x00000004   Zero   RW           49    .bss.EnemySpawnTaskHandle  main.o
    0x20000074        -       0x000001ac   Zero   RW           51    .bss.GameState      main.o
    0x20000220        -       0x00000004   Zero   RW           38    .bss.GameStateLock  main.o
    0x20000224        -       0x00000004   Zero   RW           39    .bss.GenerateRandomNumberLock  main.o
    0x20000228        -       0x00000004   Zero   RW           43    .bss.MainMenuTaskHandle  main.o
    0x2000022c        -       0x00000004   Zero   RW           40    .bss.NormalPowerUpSemaphore  main.o
    0x20000230        -       0x00000004   Zero   RW           47    .bss.NormalPowerUpSpawnTaskHandle  main.o
    0x20000234        -       0x00000004   Zero   RW           41    .bss.RenderQueue    main.o
    0x20000238        -       0x00000004   Zero   RW           44    .bss.RenderTaskHandle  main.o
    0x2000023c        -       0x00000004   Zero   RW           46    .bss.SnakePositionUpdateTaskHandle  main.o
    0x20000240        -       0x00000004   Zero   RW           48    .bss.SpecialPowerUpSpawnTaskHandle  main.o
    0x20000244        -       0x00000004   Zero   RW           50    .bss.TimeUpdateTaskHandle  main.o
    0x20000248        -       0x00000004   Zero   RW           63    .bss.generateRandomNumber.x  main.o
    0x2000024c        -       0x00000001   Zero   RW           34    .bss.inGame         main.o
    0x2000024d   0x00005d0c   0x00000003   PAD
    0x20000250        -       0x00000004   Zero   RW          407    .bss.pxCurrentTCB   tasks.o
    0x20000254        -       0x00000004   Zero   RW          418    .bss.pxDelayedTaskList  tasks.o
    0x20000258        -       0x00000004   Zero   RW          171    .bss.pxEnd          heap_4.o
    0x2000025c        -       0x00000004   Zero   RW          419    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000260        -       0x00000078   Zero   RW          409    .bss.pxReadyTasksLists  tasks.o
    0x200002d8        -       0x00000004   Zero   RW           36    .bss.score          main.o
    0x200002dc        -       0x00000004   Zero   RW           37    .bss.time           main.o
    0x200002e0        -       0x00004000   Zero   RW          178    .bss.ucHeap         heap_4.o
    0x200042e0        -       0x00000001   Zero   RW          142    .bss.ucMaxSysCallPriority  port.o
    0x200042e1   0x00005d0c   0x00000003   PAD
    0x200042e4        -       0x00000004   Zero   RW          143    .bss.ulMaxPRIGROUPValue  port.o
    0x200042e8        -       0x00000004   Zero   RW          147    .bss.ulStoppedTimerCompensation  port.o
    0x200042ec        -       0x00000004   Zero   RW          146    .bss.ulTimerCountsForOneTick  port.o
    0x200042f0        -       0x00000004   Zero   RW          414    .bss.uxCurrentNumberOfTasks  tasks.o
    0x200042f4        -       0x00000004   Zero   RW          413    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x200042f8        -       0x00000004   Zero   RW          416    .bss.uxSchedulerSuspended  tasks.o
    0x200042fc        -       0x00000004   Zero   RW          411    .bss.uxTaskNumber   tasks.o
    0x20004300        -       0x00000004   Zero   RW          410    .bss.uxTopReadyPriority  tasks.o
    0x20004304        -       0x00000001   Zero   RW           35    .bss.wonLast        main.o
    0x20004305   0x00005d0c   0x00000003   PAD
    0x20004308        -       0x00000004   Zero   RW          172    .bss.xBlockAllocatedBit  heap_4.o
    0x2000430c        -       0x00000014   Zero   RW          428    .bss.xDelayedTaskList1  tasks.o
    0x20004320        -       0x00000014   Zero   RW          429    .bss.xDelayedTaskList2  tasks.o
    0x20004334        -       0x00000004   Zero   RW          173    .bss.xFreeBytesRemaining  heap_4.o
    0x20004338        -       0x00000004   Zero   RW          424    .bss.xIdleTaskHandle  tasks.o
    0x2000433c        -       0x00000004   Zero   RW          145    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x20004340        -       0x00000004   Zero   RW          175    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20004344        -       0x00000004   Zero   RW          425    .bss.xNextTaskUnblockTime  tasks.o
    0x20004348        -       0x00000004   Zero   RW          427    .bss.xNumOfOverflows  tasks.o
    0x2000434c        -       0x00000004   Zero   RW          176    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20004350        -       0x00000004   Zero   RW          177    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20004354        -       0x00000004   Zero   RW          426    .bss.xPendedTicks   tasks.o
    0x20004358        -       0x00000014   Zero   RW          422    .bss.xPendingReadyList  tasks.o
    0x2000436c        -       0x00000004   Zero   RW          415    .bss.xSchedulerRunning  tasks.o
    0x20004370        -       0x00000008   Zero   RW          174    .bss.xStart         heap_4.o
    0x20004378        -       0x00000014   Zero   RW          420    .bss.xSuspendedTaskList  tasks.o
    0x2000438c        -       0x00000014   Zero   RW          412    .bss.xTasksWaitingTermination  tasks.o
    0x200043a0        -       0x00000004   Zero   RW          417    .bss.xTickCount     tasks.o
    0x200043a4        -       0x00000004   Zero   RW          421    .bss.xYieldPending  tasks.o
    0x200043a8        -       0x00000000   Zero   RW           73    HEAP                startup_tm4c123.o
    0x200043a8        -       0x00000200   Zero   RW           72    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1122          0          0          0      16416       4627   heap_4.o
       296          0          0          0          0       2356   list.o
      6422         54        537          5        486       8388   main.o
      1572         16          0          4         17       4894   port.o
      3100          0          0          0          0      16748   queue.o
       276         24        620          0        512       5512   startup_tm4c123.o
       268          0          0          4          0       6772   system_tm4c123.o
      6584          0          9          0        280      26900   tasks.o

    ----------------------------------------------------------------------
     19730         94       1200         16      17720      76197   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        90          0          2          3          9          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
       504         22        552          0          0       8073   gpio.o
       424         44        596          0          0       3674   sysctl.o
       154          0          0          0          0       3538   uart.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
      1726         82       1148          0         96      16281   Library Totals
        10          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       608         16          0          0         96        880   c_w.l
      1082         66       1148          0          0      15285   driverlib.lib
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
      1726         82       1148          0         96      16281   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     21456        176       2348         16      17816      91194   Grand Totals
     21456        176       2348         16      17816      91194   ELF Image Totals
     21456        176       2348         16          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                23804 (  23.25kB)
    Total RW  Size (RW Data + ZI Data)             17832 (  17.41kB)
    Total ROM Size (Code + RO Data + RW Data)      23820 (  23.26kB)

==============================================================================

